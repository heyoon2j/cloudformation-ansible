
"""Generating CloudFormation template."""
from troposphere import(Base64, ec2, GetAtt, Join, Output, Parameter, Ref, Template, FindInMap)

ApplicationPort = "3000"

t= Template()

t.add_description("Effective DevOps in AWS: Deploy Template")

# Key Pair Setting
keyname_param=t.add_parameter(
        Parameter(
                "KeyPair",
                Description="Name of an existing EC2 KeyPair to SSH",
                Type="AWS::EC2::KeyPair::KeyName",
                ConstraintDescription="must be the name of an existing EC2 KeyPair.",
        )
)

# Security Group Setting
security_param=t.add_resource(
        ec2.SecurityGroup(
                "SecurityGroup",
                GroupDescription="Allow SSH and TCP/{} access".format(ApplicationPort),
                SecurityGroupIngress=[
                        ec2.SecurityGroupRule(
                                IpProtocol="tcp",
                                FromPort="22",
                                ToPort="22",
                                CidrIp="0.0.0.0/0",
                        ),
                        ec2.SecurityGroupRule(
                                IpProtocol="tcp",
                                FromPort=ApplicationPort,
                                ToPort=ApplicationPort,
                                CidrIp="0.0.0.0/0",
                        ),
                ],
        )
)

# UserData
ud=Base64(
        Join('\n',[
                "#!/bin/bash",
                "sudo yum install --enablerepo=epel -y nodejs",
                "wget http://bit.ly/2vESNuc -0 /home/ec2-user/helloworld.js",
                "wget http://bit.ly/2vVvT18 -0 /etc/init/helloworld.conf",
                "start helloworld"
        ])
)


t.add_mapping(
        'RegionMap', {
                "us-east-1": {"AMI": "ami-7f418316"},
                "us-west-1": {"AMI": "ami-951945d0"},
                "us-west-2": {"AMI": "ami-16fd7026"},
                "eu-west-1": {"AMI": "ami-24506250"},
                "sa-east-1": {"AMI": "ami-3e3be423"},
                "ap-southeast-1": {"AMI": "ami-74dda626"},
                "ap-northeast-1": {"AMI": "ami-dcfa4edd"},
                "ap-northeast-2": {"AMI": "ami-0d097db2fb6e0f05e"}
        }
)

# Ref: 템플릿의 기존 하위 영역을 참조
ec2_instance=t.add_resource(
        ec2.Instance(
                "instance",
                ImageId=FindInMap("RegionMap",Ref("AWS::Region"),"AMI"),
                InstanceType="t2.micro",
                KeyName=Ref(keyname_param),
                SecurityGroups=[Ref(security_param)],
                UserData=ud,
        )
)

# add_output: 스택을 띄우는 도안 생성된 유용한 정보
# GetAtt: Fn::GetAtt
t.add_output([
        Output(
                "InstanceId",
                Description="InstanceId of the newly created EC2 instance",
                Value=Ref(ec2_instance),
        ),
        Output(
                "PublicIp",
                Description="Public IP address of the created EC2 instance",
                Value=GetAtt(ec2_instance,"PublicIp"),
        ),
        Output(
                "WebUrl",
                Description="Appliaction endpoint",
                Value=Join("",[
                        "http://", GetAtt(ec2_instance, "PublicDnsName"),":",ApplicationPort
                ]),
        ),
])

print t.to_json()
